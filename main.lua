require "global"
require "anim"
require "character"
require "gold"
require "o2"
require "ground"
require "fish"
require "bubble"
require "spikes"

function lutro.conf(t)
	t.width  = SCREEN_WIDTH
	t.height = SCREEN_HEIGHT
end

blocks = {
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,1,1,1,1,0,0},
		{0,0,0,0,0,0,0,0},
		{3,3,3,3,3,3,3,3},
		{1,1,1,1,1,1,1,1},
	},
	{
		{1,0,1,1,0,0,0,1},
		{1,0,1,1,0,0,0,1},
		{1,0,1,1,0,0,0,1},
		{1,0,1,1,0,0,0,1},
		{1,0,0,0,0,1,0,1},
		{1,0,0,0,0,0,0,1},
		{1,1,0,0,0,0,0,1},
		{1,1,1,1,1,1,0,1},
	},

	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,1,1},
		{0,0,0,0,0,1,1,0},
		{0,0,0,0,1,1,0,0},
		{0,0,0,1,1,0,0,0},
	},
	{
		{1,1,1,1,1,1,1,0},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,2,0,0,0},
		{0,0,0,0,1,1,1,1},
		{0,0,0,0,1,1,1,1},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
	},
	{
		{0,1,1,1,1,1,1,0},
		{0,1,1,0,0,0,0,0},
		{0,1,1,0,0,0,0,0},
		{0,1,1,0,0,0,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,1,1,1,1,1,1,0},
		{0,1,1,1,1,1,1,0},
	},
	{
		{1,1,1,1,1,1,1,0},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,0,0},
		{1,0,0,0,0,0,1,1},
		{0,0,2,0,0,0,1,1},
		{1,1,1,0,0,1,1,1},
		{1,1,1,0,0,1,1,1},
		{1,1,1,0,0,1,1,1},
	},
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,1,1,0,0},
		{0,0,0,0,1,1,0,0},
		{0,1,1,0,0,0,0,0},
		{0,1,1,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,0,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,1,1,1,1,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,1,1,1,1,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,1,1,0,0,0,0},
		{0,0,0,0,0,3,3,3},
		{0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,1,1,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,2,0},
		{0,1,0,0,0,0,1,0},
		{0,1,0,0,0,0,1,0},
		{0,1,1,1,1,1,1,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,1,1,0,0,0},
	},
	{
		{0,0,0,1,1,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,1,0,0,0,0,1,0},
		{0,1,3,3,3,3,1,0},
		{0,1,1,1,1,1,1,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,1,1,0,0,0},
	},
	{
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,1,1,1,1,1,1,0},
		{0,1,0,0,0,0,1,0},
		{0,1,0,0,0,0,1,0},
		{0,1,1,1,1,1,1,0},
		{0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
	},
	{
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,3,3,3,3,3},
		{0,0,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{1,1,1,0,0,1,1,1},
	},
	{
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
	},
	{
		{1,1,0,0,1,1,0,0},
		{1,1,0,1,1,1,0,0},
		{1,1,0,0,1,1,0,0},
		{1,1,0,0,1,1,0,0},
		{1,1,1,0,1,1,0,0},
		{1,1,0,0,1,1,0,0},
		{1,1,0,0,1,1,0,0},
		{1,1,0,1,1,1,0,0},
	},
	{
		{1,1,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,1,1},
		{1,1,0,0,0,0,1,1},
		{0,0,0,0,0,0,1,1},
		{0,0,0,0,0,0,1,1},
		{1,1,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,2,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,1,1,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
	},
	{
		{0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0},
		{0,0,1,0,0,0,0,1},
		{0,0,0,0,0,0,1,1},
		{0,0,0,0,0,1,1,1},
		{0,0,0,0,1,1,1,1},
	},
	{
		{1,1,1,0,0,1,1,1},
		{1,1,1,0,0,1,1,1},
		{1,1,1,0,0,1,1,1},
		{0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1},
	},	
}

function lutro.load()
	camera_x = 0
	camera_y = 0
	lutro.graphics.setBackgroundColor(0, 0, 20)
	tileset = lutro.graphics.newImage("assets/tileset.png")
	font = lutro.graphics.newImageFont("assets/font.png",
		" abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,!?-+/")
	lutro.graphics.setFont(font)
	sfx_gold = lutro.audio.newSource("assets/gold.wav")

	math.randomseed(os.time())

	map = {}

	for my=1, 8 do
		for mx=1, 4 do
			block = blocks[math.random(#blocks)]
			for y=1, #block do
				if not map[(my-1)*8+y] then
					map[(my-1)*8+y] = {}
				end
				for x=1, #block[y] do
					map[(my-1)*8+y][(mx-1)*8+x] = block[y][x]
				end
			end
		end
	end

	for y=1, #map do
		for x=1, #map[y] do
			if y == 1 then map[y][x] = 1 end
			if x == 1 then map[y][x] = 1 end
			if y == #map then map[y][x] = 1 end
			if x == #map[y] then map[y][x] = 1 end
		end
	end

	map[5][5] = 0

	for y=1, #map do
		for x=1, #map[y] do
			if map[y][x] == 0 and math.random(200) == 200 then
				table.insert(entities, newFish({x = (x-1)*16, y = (y-1)*16}))
			elseif map[y][x] == 1 then
				table.insert(entities, newGround({x = (x-1)*16, y = (y-1)*16, mapx = x, mapy = y}))
			elseif map[y][x] == 2 then
				table.insert(entities, newO2({x = (x-1)*16, y = (y-1)*16}))
			elseif map[y][x] == 3 then
				table.insert(entities, newSpikes({x = (x-1)*16, y = (y-1)*16}))
			end
		end
	end

	character = newCharacter()
	table.insert(entities, character)
end

function lutro.update(dt)
	for i=1, #entities do
		if entities[i] and entities[i].update then
			entities[i]:update(dt)
		end
	end
	detect_collisions()
end

function lutro.draw()
	lutro.graphics.push()

	lutro.graphics.translate(camera_x, camera_y)

	for i=1, #entities do
		if entities[i].draw then
			entities[i]:draw(dt)
		end
	end

	lutro.graphics.pop()

	lutro.graphics.setColor(255, 255, 255)
	lutro.graphics.rectangle("fill", 3, 3, 102, 6)
	lutro.graphics.setColor(0, 0, 128)
	lutro.graphics.rectangle("fill", 4, 4, 100, 4)
	lutro.graphics.setColor(100, 100, 255)
	lutro.graphics.rectangle("fill", 4, 4, character.o2, 4)
end
